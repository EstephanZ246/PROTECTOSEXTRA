;Sumador Código Morse
;PROYECTO 1
;ULTIMA MODIFICACION 03/04/2021
    
PROCESSOR 16F877A
#include <xc.inc>

; CONFIG
  CONFIG  FOSC = XT             ; Oscillator Selection bits (XT oscillator)
  CONFIG  WDTE = OFF            ; Watchdog Timer Enable bit (WDT disabled)
  CONFIG  PWRTE = ON            ; Power-up Timer Enable bit (PWRT enabled)
  CONFIG  BOREN = OFF           ; Brown-out Reset Enable bit (BOR disabled)
  CONFIG  LVP = OFF             ; Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
  CONFIG  CPD = OFF             ; Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
  CONFIG  WRT = OFF             ; Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
  CONFIG  CP = OFF              ; Flash Program Memory Code Protection bit (Code protection off)
   
  
;MACROS  
  REINICIAR_TMR1 MACRO // MACRO PARA RESTAURAR VALOR DE TIMER 1
 // 3036 PARA 500MS 0BDC
    MOVLW 0X0B
    MOVWF TMR1H
    MOVLW 0XDC
    MOVWF TMR1L
    //BCF PIR1,0; TMR1IF Limpiamos bandera de Timer1
    ENDM

PSECT udata_bank0; common memory
    // VARIABLE PARA EL CAMBIO DE MODOS
    
    MORSEUNIDAD1: DS 1	// VARIABLES PARA NUMERO MORSE 1.
    MORSEDECENA1: DS 1	
    MORSE1_A_REAL: DS 1	
    MORSE1_FINAL: DS 1	
    
    MORSEUNIDAD2: DS 1 // VARIABLES PARA NUMERO MORSE 2.
    MORSEDECENA2: DS 1
    MORSE2_A_REAL: DS 1
    MORSE2_FINAL: DS 1
    
    MORSEUNIDAD3: DS 1 // VARIABLES PARA NUMERO MORSE 3.
    MORSEDECENA3: DS 1
    MORSE3_A_REAL: DS 1
    MORSE3_FINAL: DS 1
    
    UNIDAD: DS 1  // VARIABLES PARA EXTRACCION DE UNIDAD, DECENA Y CENTENA POR SEPARADO.
    DECENA: DS 1
    CENTENA: DS 1
    
    UNIDAD_FINAL: DS 1	// VARIBALES PARA GUARDAR DATOS DE CONVERCION.
    DECENA_FINAL: DS 1
    CENTENA_FINAL: DS 1
    
    CENTENA_MORSE: DS 1	// VARIABLES PARA CONVERTIR BINARIO A MORSE.
    DECENA_MORSE: DS 1
    UNIDAD_MORSE: DS 1
    
    CENTENA_MORSETEMP: DS 1 // VARIBLES PARA DESPLEGAR RESULTADO FINAL EN MORSE.
    DECENA_MORSETEMP: DS 1
    UNIDAD_MORSETEMP: DS 1
    
    RESULTADO: DS 2 // VARIABLE QUE GUARDA EL RESULTADO EN BINARIO.
    SUMA_TODO: DS 1 // VARIABLE QUE SIRVE PARA SUMAR TODOS LOS NUMERO, PARA LUEGO 
		    // SER GUARDADA EN LA VARIABLE "RESULTADO" DE ARRIBA.

    CONTADOR_TIMER1: DS 1 //VARIABLE QUE PERMITE CONVERTIR LLEGAR AL VALOR QUE SE DESEA CON EL TIMER1
    CONTROL_NUMEROS: DS 1// VARIBLE QUE PERMITE GUARDAR 5 DIGITOS CADA VEZ QUE PONEMOS UN NUMERO
    CONTROL_SALIDAS: DS 1// VARIABLE QUE CONTROLA CUANTOS DIGITOS SALEN CUANDO DESPLEGAMOS RESULTADO
    BANDERA_UD: DS 1// BANDERA QUE PERMITE CAMBIAR DE UNIDAD A DECENA CUANDO INGRESAMOS UN NUMERO
    
    PORTEV: DS 1 // VARIBLE QUE PERMITE PODER VER LOS "RECIENTES"
    
    CONTADOR_TEMP: DS 1//VARIABLE QUE PERMITE SUMAR 10 VECES LA DECENA 
    
    BANDERA_SALIDA: DS 1//BANDERA QUE PERMITE QUE COMIENCE A DESPLEGAR EL RESULTADO EN BINARIO
    
    TIMER1: DS 1// TIMERS UTILES PARA TENER EL TIEMPO DESEADO EN LA SALIDA(TIEMPO PARA PUNTO Y GUION)
    TIMER2: DS 1
    TIMER3: DS 1


    
    
    // VARIABLES PARA ALMACENAR REGISTROS TEMPORALMENTE
    PSECT udata_shr 
    W_TEMP:	    DS 1 // GUARDAR TEMPORALMENTE EL REGISTRO EN INTERRUPCION
    STATUS_TEMP:    DS 1 // GUARDAR TEMPORALMENTE EL REGISTRO EN INTERRUPCION
 ;_______________Vector Reset_________________
 
    PSECT resVect, class=CODE, abs, delta=2
    ORG 00h		;posicion 0000h para el Reset
    resetVec:		; configuramos el vector de reset
	PAGESEL MAIN
	GOTO MAIN
     
    PSECT intVect, class=CODE, abs, delta=2
    ORG 04h // AQUI ALMACENAMOS LA INTERRUPCION, INDIRECT DATA MEMORY ADDRESS POINTER
    
    ALMACENAR_REGISTROS: // PUSH
    MOVWF W_TEMP
    SWAPF STATUS,W // ALMACENAR  REGISTROS EN VARIABLES TEMPORALES
    MOVWF STATUS_TEMP
    
    EJECUTAR_INTERRUPCION://POP

    INTERRUPCION_PORTB:
    BTFSS INTCON,0 // VERIFICAMOS BANDERA DE PORTB
    GOTO INTERRUPCION_TIMER1
    
    BOTON1:// INGRESAR NUMERO
    BTFSC PORTB,7// VERIFICAMOS QUE EL PRIMER BOTON SE PRESIONE
    GOTO BOTON2// SI NO, ENTONCES VAMOS A LA SIGUIENTE VERIFICACION
    CALL MINI_TIMER
    CLRF CONTADOR_TIMER1 // LIMPIARMOS EL CONTADOR DEL TIMER
    BSF T1CON,0//TMR1ON	// ENCENDEMOS TIMER 1
    BSF PORTC,5 // EL LED QUE NOS INDICA CUANDO OPRIMIMOS EL BOTON
    
    MORSEE1:// SECCION QUE SE ENCARGA DE REGISTRAR EL PRIMER NUMERO
    BTFSS PORTC,0 // VERIFICAMOS QUE ESTE EN NUMERO 1 
    GOTO MORSEE2 // SI NO ESTA ACTIVADO EL NUMERO 1, SE PARA AL SIGUIENTE

    VERIFICAR_PARA_UNIDAD_MORSEE1:
    BTFSC BANDERA_UD,0 // VENIRICAMOS SI ESTÁ EN UNIDAD O DECENA
    GOTO VERIFICAR_PARA_DECENA_MORSEE1 // SI NO ESTA EN UNIDAD, SE PASA A DECENA
    
    BCF STATUS,0 // LIMPIAS CARRY DEL STATUS POR SI ACASO
    RLF MORSEUNIDAD1// MOVEMOS LOS BITS PARA PODER INGRESAR EL NUEVO
    BSF MORSEUNIDAD1,0// SI ES PUNTO SE PONDRA EN 1 EL BIT
    
    MOVLW 1
    ADDWF CONTROL_NUMEROS// CONTROL PARA QUE NO SE PASE DE 5 DIGITOS
    MOVLW 6
    SUBWF CONTROL_NUMEROS,W
    BTFSS STATUS,2 // Z STATUS 
    GOTO $+7
    CLRF CONTROL_NUMEROS // LIMPIAMOS CONTROL PARA CAMBIAR DE UNIDAD A DECENA
    MOVLW 1
    MOVWF BANDERA_UD// CAMBIAMOS LAS BANDERAS PARA DECENAS
    CLRF MORSEDECENA1
    BCF STATUS,0
    RRF MORSEUNIDAD1

    VERIFICAR_PARA_DECENA_MORSEE1:
    BTFSS BANDERA_UD,0 // VERIFICAMOS BANDERA EN DECENAS
    GOTO MORSEE2
    
    BCF STATUS,0 // LIAMPOS CARRY DEL STATUS POR SI ACASO
    RLF MORSEDECENA1 // CORREMOS BITS PARA INGRESAR NUEVOS
    BSF MORSEDECENA1,0 // SI ES PUNTO, LO PONEMOS
    
    MOVLW 1
    ADDWF CONTROL_NUMEROS // CONTROL PARA NO PASARNOS DE 5 DIGITOS
    MOVLW 6
    SUBWF CONTROL_NUMEROS,W // 
    BTFSS STATUS,2 // Z STATUS
    GOTO $+7
    CLRF CONTROL_NUMEROS // LIMPIAMOS CONTROL PARA COMENZAR DE 0 AL INGRESAR EN UNIDAD
    MOVLW 0
    MOVWF BANDERA_UD // LIMPIAMOS BANDERA PARA DIRIGIRNOS A UNIDAD
    CLRF MORSEUNIDAD1
    BCF STATUS,0
    RRF MORSEDECENA1
    // EN LOS SIGUIENTE ES EXACTAMENTE LOS MISMO, SOLO QUE SE GUARDAN EN DIFERENTES VARIABLES LOS DATOS INGRESADOS.
    MORSEE2:
    BTFSS PORTC,1
    GOTO MORSEE3

    VERIFICAR_PARA_UNIDAD_MORSEE2:
    BTFSC BANDERA_UD,0
    GOTO VERIFICAR_PARA_DECENA_MORSEE2
    
    BCF STATUS,0 // LIAMPOS CARRY DEL STATUS POR SI ACASO
    RLF MORSEUNIDAD2
    BSF MORSEUNIDAD2,0
    
    MOVLW 1
    ADDWF CONTROL_NUMEROS
    MOVLW 6
    SUBWF CONTROL_NUMEROS,W
    BTFSS STATUS,2 // Z STATUS
    GOTO $+7
    CLRF CONTROL_NUMEROS
    MOVLW 1
    MOVWF BANDERA_UD
    CLRF MORSEDECENA2
    BCF STATUS,0
    RRF MORSEUNIDAD2

    VERIFICAR_PARA_DECENA_MORSEE2:
    BTFSS BANDERA_UD,0
    GOTO MORSEE3
    
    BCF STATUS,0 // LIAMPOS CARRY DEL STATUS POR SI ACASO
    RLF MORSEDECENA2
    BSF MORSEDECENA2,0
    
    MOVLW 1
    ADDWF CONTROL_NUMEROS
    MOVLW 6
    SUBWF CONTROL_NUMEROS,W
    BTFSS STATUS,2 // Z STATUS
    GOTO $+7
    CLRF CONTROL_NUMEROS
    MOVLW 0
    MOVWF BANDERA_UD
    CLRF MORSEUNIDAD2
    BCF STATUS,0
    RRF MORSEDECENA2
    
    MORSEE3:
    BTFSS PORTC,2
    GOTO BOTON2

    VERIFICAR_PARA_UNIDAD_MORSEE3:
    BTFSC BANDERA_UD,0
    GOTO VERIFICAR_PARA_DECENA_MORSEE3
    
    BCF STATUS,0 // LIAMPOS CARRY DEL STATUS POR SI ACASO
    RLF MORSEUNIDAD3
    BSF MORSEUNIDAD3,0
    
    MOVLW 1
    ADDWF CONTROL_NUMEROS
    MOVLW 6
    SUBWF CONTROL_NUMEROS,W
    BTFSS STATUS,2 // Z STATUS
    GOTO $+7
    CLRF CONTROL_NUMEROS
    MOVLW 1
    MOVWF BANDERA_UD
    CLRF MORSEDECENA3
    BCF STATUS,0
    RRF MORSEUNIDAD3
 
    VERIFICAR_PARA_DECENA_MORSEE3:
    BTFSS BANDERA_UD,0
    GOTO BOTON2
    
    BCF STATUS,0 // LIAMPOS CARRY DEL STATUS POR SI ACASO
    RLF MORSEDECENA3
    BSF MORSEDECENA3,0
    
    MOVLW 1
    ADDWF CONTROL_NUMEROS
    MOVLW 6
    SUBWF CONTROL_NUMEROS,W
    BTFSS STATUS,2 // Z STATUS
    GOTO $+7
    CLRF CONTROL_NUMEROS
    MOVLW 0
    MOVWF BANDERA_UD
    CLRF MORSEUNIDAD3
    BCF STATUS,0
    RRF MORSEDECENA3
    
    BOTON2: // CAMBIAR PARA PONER OTRO NÚMERO
    BTFSC PORTB,6
    GOTO BOTON3
    CALL MINI_TIMER
    BCF STATUS,0 // LIMPIAMOS CARRY DE STATUS
    RLF PORTC //  INDICADOR QUE SE CAMBIÓ DE NUMERO
    CLRF PORTD // LIMPIAMOS PUERTOD, EL INDICADOR DEL VALOR QUE ESTAMOS INGRESANDO
    CLRF CONTROL_NUMEROS // LIMPIAMOS CONTROL Y BANDERA DE DECIMALES Y PARA PODER INGRESAR 5 DIGITOS
    CLRF BANDERA_UD
    BTFSS PORTC,3 // SI EL INDICADOR DE "NUMERO INGRESADO" SE DESBORDA A UN CUARTO, SE VUELVE A REINICIAR
    GOTO $+5
    MOVLW 0X01// CADA VEZ QUE CAMBIAMOS UN NUMERO, LO REINICIAMOS PARA PODER COLOCAR UN NUEVO VALOR
    MOVWF PORTC
    CLRF MORSEUNIDAD1
    CLRF MORSEDECENA1
    BTFSS PORTC,0
    GOTO $+3
    CLRF MORSEUNIDAD1
    CLRF MORSEDECENA1
    BTFSS PORTC,1
    GOTO $+3
    CLRF MORSEUNIDAD2
    CLRF MORSEDECENA2
    BTFSS PORTC,2
    GOTO $+3
    CLRF MORSEUNIDAD3
    CLRF MORSEDECENA3

    BOTON3: // HACER SUMA
    BTFSC PORTB,5
    GOTO BOTON4// SE HABILITA LA BANDERA PARA PODER MOSTRAR RESULTADO O NUMERO RECIENTE
    CALL MINI_TIMER
    BSF BANDERA_SALIDA,0
    
    
    BOTON4: // MOVER EN MENU
    BTFSC PORTB,4 // ES ESTA OPCION LO QUE VAMOS A HACER ES MOVERNOS EN EL MENÚ PARA PODER MOSTRAR LOS VALORES RECIENTES O EL RESUTLADO
    GOTO LIMPIAR_BANDERA_PORTB
    CALL MINI_TIMER
    CLRF BANDERA_SALIDA
    MOVLW 0///
    SUBWF PORTEV,W
    BTFSS STATUS,2 
    GOTO VER_RECIENTES
    MOVLW 1
    MOVWF PORTEV
    GOTO LIMPIAR_BANDERA_PORTB
    VER_RECIENTES:
    BCF STATUS,0
    RLF PORTEV
    BTFSS PORTEV,3
    GOTO LIMPIAR_BANDERA_PORTB
    CLRF PORTEV
    CLRF PORTE
    
    LIMPIAR_BANDERA_PORTB:
    BCF INTCON,0//RBIF ESTA ES LA BANDERA, LA LIMPIAMOS 
    
    
    INTERRUPCION_TIMER1:
    BTFSS PIR1,0 // BANDERA TIMER1
    GOTO RESTAURAR_REGISTROS
    
    MOVLW 1
    ADDWF CONTADOR_TIMER1
    
    MOVLW 2
    SUBWF CONTADOR_TIMER1,W
    BTFSS STATUS,2// BANDERA DE Z EN STATUS
    GOTO RESTAURAR_TIMER1
    BCF T1CON,0//TMR1ON
    BTFSC PORTB,7
    GOTO RESTAURAR_TIMER1
    ////////////////////////SEGUN BANDERAS SE PONE GUION EN DONDE CORRESPONDE
    TIMER_UNIDAD_MORSEE1:
    BTFSS PORTC,0 // VERIFICAMOS QUE ESTE EN NUMERO 1 
    GOTO TIMER_UNIDAD_MORSEE2// ESTO NOS VA A SERVIR PARA PODER PONER GUION CUANDO ES NECESARIO, LA ESPERA ES DE 1 SEG 
    BTFSC BANDERA_UD,0		// ES LO MISMO CON LOS DEMAS QUE ESTEN EN LA INTERRUPCION DEL TIMER1, SOLO QUE DEPENDE DEL NUMERO Y DE 
    GOTO TIMER_DECENA_MORSEE1   // SI ESTAMOS EN UNIDAD O DECENA
    BCF MORSEUNIDAD1,0
    BCF T1CON,0//TMR1ON
    
    TIMER_DECENA_MORSEE1:
    BTFSS PORTC,0 // VERIFICAMOS QUE ESTE EN NUMERO 1 
    GOTO TIMER_UNIDAD_MORSEE2
    BTFSS BANDERA_UD,0
    GOTO TIMER_UNIDAD_MORSEE2
    BCF MORSEDECENA1,0
    BCF T1CON,0//TMR1ON
    
    TIMER_UNIDAD_MORSEE2:
    BTFSS PORTC,1 // VERIFICAMOS QUE ESTE EN NUMERO 1 
    GOTO TIMER_UNIDAD_MORSEE3
    BTFSC BANDERA_UD,0
    GOTO TIMER_DECENA_MORSEE2
    BCF MORSEUNIDAD2,0
    BCF T1CON,0//TMR1ON
    
    TIMER_DECENA_MORSEE2:
    BTFSS PORTC,1 // VERIFICAMOS QUE ESTE EN NUMERO 1 
    GOTO TIMER_UNIDAD_MORSEE3
    BTFSS BANDERA_UD,0
    GOTO TIMER_UNIDAD_MORSEE3
    BCF MORSEDECENA2,0
    BCF T1CON,0//TMR1ON
    
    TIMER_UNIDAD_MORSEE3:
    BTFSS PORTC,2 // VERIFICAMOS QUE ESTE EN NUMERO 1 
    GOTO RESTAURAR_TIMER1
    BTFSC BANDERA_UD,0
    GOTO TIMER_DECENA_MORSEE3
    BCF MORSEUNIDAD3,0
    BCF T1CON,0//TMR1ON
    
    TIMER_DECENA_MORSEE3:
    BTFSS PORTC,2 // VERIFICAMOS QUE ESTE EN NUMERO 1 
    GOTO RESTAURAR_TIMER1
    BTFSS BANDERA_UD,0
    GOTO RESTAURAR_TIMER1
    BCF MORSEDECENA3,0
    BCF T1CON,0//TMR1ON

    RESTAURAR_TIMER1:
    REINICIAR_TMR1
    BCF PIR1,0 // LIMPIAMOS BANDERA DEL TIMER 1

    RESTAURAR_REGISTROS://RETFIE
    SWAPF STATUS_TEMP,W // RECUPERAMOS REGISTROS SIN MODIFICAR BANDERAS
    MOVWF STATUS// RECUPERAMOS REGISTROS SIN MODIFICAR BANDERAS
    SWAPF W_TEMP,1// RECUPERAMOS REGISTROS SIN MODIFICAR BANDERAS
    SWAPF W_TEMP,W// RECUPERAMOS REGISTROS SIN MODIFICAR BANDERAS
    RETFIE// SALIMOS DE LA INTERRUPCION
    
    PSECT code, delta=2, abs
    ORG 100h //INICIAMOS CODIGO CON LAS TABLAS
 
    TABLAS: // MORSE --> NORMAL
    CLRF PCLATH
    BSF PCLATH,0 // ESCOGER VALOR DE LAS TABLAS SEGUN CONTADORES
    ADDWF PCL ; PC+PCLATH + PCL + W
    ; VALORES REALES    MORSE(COMO LOS VAN A INGRESAR)   
    RETLW 00000000B;0	//00000 0
    RETLW 00001001B;9	//00001	1 
    RETLW 00000000B//2
    RETLW 00001000B;8	//00011	3
    RETLW 00000000B//4
    RETLW 00000000B//5
    RETLW 00000000B//6
    RETLW 00000111B;7	//00111	7
    RETLW 00000000B//8
    RETLW 00000000B//9
    RETLW 00000000B//10
    RETLW 00000000B//11
    RETLW 00000000B//12
    RETLW 00000000B//13
    RETLW 00000000B//14
    RETLW 00000110B;6	//01111 15
    RETLW 00000001B;1	//10000 16
    RETLW 00000000B//17
    RETLW 00000000B//18
    RETLW 00000000B//19
    RETLW 00000000B//20
    RETLW 00000000B//21
    RETLW 00000000B//22
    RETLW 00000000B//23
    RETLW 00000010B;2	//11000	24
    RETLW 00000000B//25
    RETLW 00000000B//26
    RETLW 00000000B//27
    RETLW 00000011B;3	//11100	28
    RETLW 00000000B//29
    RETLW 00000100B;4	//11110	30
    RETLW 00000101B;5	//11111	31
    
    TABLAS_REVERSA: // NORMAL --> MORSE
    CLRF PCLATH
    BSF PCLATH,0 // ESCOGER VALOR DE LAS TABLAS SEGUN CONTADORES
    ADDWF PCL ; PC+PCLATH + PCL + W
    ; MORSE               NUMERO REALES
    RETLW 00000B//0	
    RETLW 00001B//1	
    RETLW 00011B//2
    RETLW 00111B//3	
    RETLW 01111B//4
    RETLW 11111B//5
    RETLW 11110B//6
    RETLW 11100B//7	
    RETLW 11000B//8
    RETLW 10000B//9

    CONFIGURAR_IO:
    BANKSEL ADCON1 // SALIDA DIGITALES
    CLRF ADCON1// SALIDA DIGITALES
    
    BANKSEL PORTA // LIMPIAMMOS PUERTOS 
    CLRF PORTB
    CLRF PORTE
    CLRF PORTC
    CLRF PORTD
  
    BANKSEL TRISA
    // PUERTO B PARA LOS BOTONES
    MOVLW 11110000B // CONFIGURAMOS PUERTOS, SOLO EL PORTB VA A SER DE ENTRADA, LOS DEMAS DECLARADOS SON DE SALIDA
    MOVWF TRISB
    CLRF TRISE
    CLRF TRISC
    CLRF PORTD // PRUEBA
    RETURN

   CONFIGURAR_PULLUP:          //// CONFIGURAMOS PULL-UP PARA PORTB
 ; CONFIGURACIONES EN OPTION_REG
    BANKSEL OPTION_REG //ESCOGEMOS
    BCF OPTION_REG,7 //PORTB PULL-UP ENABLE BIT 
    
    BANKSEL PORTA
    RETURN
    
    CONFIGURAR_INTERRUPCIONES:
    BANKSEL INTCON
    BSF INTCON,7//GIE
    BCF INTCON,0//RBIF ESTA ES LA BANDERA, LA LIMPIAMOS 
    BSF INTCON,3//RBIE HABILITA INTERRUPCION PORTB
    BSF INTCON,6 // HABILITAMOS PERIPHERIAL INTERRUPT PARA TIMER 1 Y TIMER 2
    BANKSEL PIE1 // HABILITAMOS INTERRUPCION
    BSF PIE1,0 // TIMER1 OVERFLOW INTERRUPT
    BANKSEL PIR1
    BCF PIR1,0 // LIMPIAMOS BANDERA DEL TIMER 1
    BANKSEL PORTA
    RETURN
    
    CONFIGURAR_TMR1:
    //PRESCALER
    BANKSEL T1CON
    BSF T1CON,5//T1CKPS1 // PRE 1:8
    BSF T1CON,4//T1CKPS0				 PENDIENTE
    BCF T1CON,1//TMR1CS
    ///BSF T1CON,0//TMR1ON
    BANKSEL PORTA
    RETURN

MAIN: 
    // LLAMAMOS CONFIGURACION
    CALL CONFIGURAR_IO 
    CALL CONFIGURAR_PULLUP
    CALL CONFIGURAR_INTERRUPCIONES
    CALL CONFIGURAR_TMR1
    BANKSEL PORTA // PORTA POR SI ACASO
    
    // VALORES INICIALES
    BSF PORTC,0
    CLRF BANDERA_UD
    CLRF RESULTADO
    CLRF CONTROL_NUMEROS
    CLRF BANDERA_UD
    CLRF MORSEUNIDAD1
    CLRF MORSEDECENA1
    CLRF MORSEUNIDAD2
    CLRF MORSEDECENA2
    CLRF MORSEUNIDAD3
    CLRF MORSEDECENA3
    CLRF PORTEV
    CLRF BANDERA_SALIDA

LOOP:
   BTFSC PORTB,7 // INDICADOR DE ENTRADA
   BCF PORTC,5 // EL LED DE ENTRADA SE APAGA CUANDO NO ESTÁ OPRIMIDO EL BOTON

   CAMBIAR_VISUALIZACION_RECIENTES:// DEPENDE DE LA VARIABLE PORTEV CAMBIAMOS EL VALOR DE PORTE
   BTFSC PORTEV,0
   BSF PORTE,0
   BTFSC PORTEV,1
   BSF PORTE,1
   BTFSC PORTEV,2
   BSF PORTE,2

   //GUARDAR DATOS DE MORSE A NUMERO REALES
   GUARDAR_VALORES:
   GUARDAR_UNIDAD_NUMERO1:
   //INDICADOR UNIDAD O DECENA
   
   BTFSC BANDERA_UD,0 // DEPENDE DE VALOR DE BANDERA UD CAMBIAMOS LED INDICADORA DE UNIDAD O DECENA
   GOTO $+3
   BSF PORTC,6
   BCF PORTC,7
   BTFSS BANDERA_UD,0
   GOTO $+3
   BCF PORTC,6
   BSF PORTC,7
   
   BTFSS PORTC,0 // LO SIGUIENTE ES PARA MOSTRAR EL VALOR QUE ESTAMOS INGRESANDO SEGUN LAS BANDERAS DEL NUMERO EN EL QUE NOS ENCONTREMOS
   GOTO GUARDAR_UNIDAD_NUMERO2//Y SI ESTAMOS EN UNIDAD O DECENA
   BTFSC BANDERA_UD,0
   GOTO GUARDAR_DECENA_NUMERO1
   MOVF MORSEUNIDAD1,W
   MOVWF PORTD
   GUARDAR_DECENA_NUMERO1:// GUARADAMOS DECENA DE NUMERO1
   BTFSS PORTC,0
   GOTO GUARDAR_UNIDAD_NUMERO2
   BTFSS BANDERA_UD,0
   GOTO GUARDAR_UNIDAD_NUMERO2
   MOVF MORSEDECENA1,W
   MOVWF PORTD
   GUARDAR_UNIDAD_NUMERO2:
   BTFSS PORTC,1 //GUARDAMOS UNIDAD DEL PRIMER NÚMERO
   GOTO GUARDAR_UNIDAD_NUMERO3
   BTFSC BANDERA_UD,0
   GOTO GUARDAR_DECENA_NUMERO2
   MOVF MORSEUNIDAD2,W
   MOVWF PORTD
   GUARDAR_DECENA_NUMERO2:
   BTFSS PORTC,1
   GOTO GUARDAR_UNIDAD_NUMERO3
   BTFSS BANDERA_UD,0
   GOTO GUARDAR_UNIDAD_NUMERO3
   MOVF MORSEDECENA2,W
   MOVWF PORTD
   GUARDAR_UNIDAD_NUMERO3:
   BTFSS PORTC,2 //GUARDAMOS UNIDAD DEL PRIMER NÚMERO
   GOTO FINAL_GUARDAR
   BTFSC BANDERA_UD,0
   GOTO GUARDAR_DECENA_NUMERO3
   MOVF MORSEUNIDAD3,W
   MOVWF PORTD
   GUARDAR_DECENA_NUMERO3:
   BTFSS PORTC,2
   GOTO FINAL_GUARDAR
   BTFSS BANDERA_UD,0
   GOTO FINAL_GUARDAR
   MOVF MORSEDECENA3,W
   MOVWF PORTD
   FINAL_GUARDAR:

 // CONVERTIR A REALES (CONCATENAR UNIDAD Y DECENA EN UN SOLO REGISTRO)
 CONCATENAR_MORSE1:
 MOVF MORSEDECENA1,W// LO SIGUIENTE ES PARA PODER ALMACENAR LOS NUMEROS MORSE COMO NUMEROS REALES BINARIOS
 CALL TABLAS	    // ASI LOS PODEMOS SUMAR DESPUES
 MOVWF MORSE1_A_REAL
 MOVLW 10
 MOVWF CONTADOR_TEMP
 X10_1:
 MOVF MORSEUNIDAD1,W
 CALL TABLAS
 ADDWF MORSE1_A_REAL,F
 DECFSZ CONTADOR_TEMP,F
 GOTO X10_1
 MOVF MORSE1_A_REAL,W
 MOVWF MORSE1_FINAL
 
 CONCATENAR_MORSE2:// LO SIGUIENTE ES PARA PODER ALMACENAR LOS NUMEROS MORSE COMO NUMEROS REALES BINARIOS
 MOVF MORSEDECENA2,W// ASI LOS PODEMOS SUMAR DESPUES
 CALL TABLAS 
 MOVWF MORSE2_A_REAL
 MOVLW 10
 MOVWF CONTADOR_TEMP
 X10_2:
 MOVF MORSEUNIDAD2,W
 CALL TABLAS
 ADDWF MORSE2_A_REAL,F
 DECFSZ CONTADOR_TEMP,F
 GOTO X10_2
 MOVF MORSE2_A_REAL,W
 MOVWF MORSE2_FINAL
 
 CONCATENAR_MORSE3:// LO SIGUIENTE ES PARA PODER ALMACENAR LOS NUMEROS MORSE COMO NUMEROS REALES BINARIOS
 MOVF MORSEDECENA3,W// ASI LOS PODEMOS SUMAR DESPUES
 CALL TABLAS 
 MOVWF MORSE3_A_REAL
 MOVLW 10
 MOVWF CONTADOR_TEMP
 X10_3:
 MOVF MORSEUNIDAD3,W
 CALL TABLAS
 ADDWF MORSE3_A_REAL,F
 DECFSZ CONTADOR_TEMP,F
 GOTO X10_3
 MOVF MORSE3_A_REAL,W
 MOVWF MORSE3_FINAL

 //// HACER SUMATORIA DE TODO
 MOVF MORSE1_FINAL,W
 MOVWF SUMA_TODO
 MOVWF MORSE2_FINAL,W
 ADDWF SUMA_TODO
 MOVWF MORSE3_FINAL,W
 ADDWF SUMA_TODO
 MOVWF SUMA_TODO,W
 MOVWF RESULTADO
 CALL CONVERSOR_BCD
 //////////// AQUI REGRESAMOS EL NUMERO BINARIO A NUMERO MORSE
 MOVF CENTENA_FINAL,W
 CALL TABLAS_REVERSA
 MOVWF CENTENA_MORSE
 
 MOVF DECENA_FINAL,W
 CALL TABLAS_REVERSA
 MOVWF DECENA_MORSE
 
 MOVF UNIDAD_FINAL,W
 CALL TABLAS_REVERSA
 MOVWF UNIDAD_MORSE
///////////////////////////////////
 
 // SI LA BANDERA PARA MOSTRAR LOS DATOS ESTÁ ARRIBA SE PROCEDE A MOSTRAR EL CODIGO MORSE EN EL LED/BUZZER 
 BTFSS BANDERA_SALIDA,0// SE VERIFICA SI SE MUESTRA EL VALOR RESULTADO O ALGUN VALOR RECIENTE
 GOTO LOOP

 MOVLW 0  // SI LA 
 SUBWF PORTEV,W
 BTFSS STATUS,2//ZERO
 GOTO VISUALIZAR_RECIENTE1
 
 MOVF CENTENA_MORSE,W // SE CARGA EL VALOR DE RESULTADO PARA MOSTAR
 MOVWF CENTENA_MORSETEMP
 MOVF DECENA_MORSE,W
 MOVWF DECENA_MORSETEMP
 MOVF UNIDAD_MORSE,W
 MOVWF UNIDAD_MORSETEMP
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE CENTENA DEL RESULTADO
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS CENTENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC CENTENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF CENTENA_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE DECENA DEL RESULTADO
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF DECENA_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE UNIDAD DEL RESULTADO
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF UNIDAD_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 CLRF BANDERA_SALIDA
 
 VISUALIZAR_RECIENTE1: // SE MUESTRA EL VALOR DEL RECIENTE1, QUE ES EL ULTIMO QUE SE METIO
 BTFSS PORTEV,0
 GOTO VISUALIZAR_RECIENTE2
 
 MOVF MORSEDECENA3,W
 MOVWF UNIDAD_MORSETEMP
 MOVF MORSEUNIDAD3,W
 MOVWF DECENA_MORSETEMP
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE DECENA DEL RECIENTE
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF DECENA_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE UNIDAD DEL RECIENTE
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF UNIDAD_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 CLRF BANDERA_SALIDA
 
 VISUALIZAR_RECIENTE2:// SE MUESTRA EL VALOR DEL RECIENTE2, QUE ES EL PENULTIMO QUE SE METIO
 BTFSS PORTEV,1
 GOTO VISUALIZAR_RECIENTE3
 
 MOVF MORSEDECENA2,W
 MOVWF UNIDAD_MORSETEMP
 MOVF MORSEUNIDAD2,W
 MOVWF DECENA_MORSETEMP
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE DECENA DEL RECIENTE
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF DECENA_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 
 MOVLW 5 // IMPRIMIMOS EL VALOR DE UNIDAD DEL RECIENTE
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF UNIDAD_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 CLRF BANDERA_SALIDA
 
 VISUALIZAR_RECIENTE3:// SE MUESTRA EL VALOR DEL RECIENTE3, QUE ES EL PRIMERO QUE SE METIO
 BTFSS PORTEV,2
 GOTO FIN_BANDERA_SALIDA 
 
 MOVF MORSEDECENA1,W
 MOVWF UNIDAD_MORSETEMP
 MOVF MORSEUNIDAD1,W
 MOVWF DECENA_MORSETEMP
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE DECENA DEL RECIENTE
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC DECENA_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF DECENA_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 
 MOVLW 5// IMPRIMIMOS EL VALOR DE UNIDAD DEL RECIENTE
 MOVWF CONTROL_SALIDAS
 MOVLW 1
 SUBWF CONTROL_SALIDAS,F
 BTFSS UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_PUNTO
 BCF PORTC,4
 CALL TIMER_PUNTO
 BTFSC UNIDAD_MORSETEMP,0
 GOTO $+5
 BSF PORTC,4
 CALL TIMER_GUION
 BCF PORTC,4
 CALL TIMER_PUNTO
 BCF STATUS,0
 RRF UNIDAD_MORSETEMP
 MOVLW 0
 SUBWF CONTROL_SALIDAS,W
 BTFSS STATUS,2//ZERO
 GOTO $-19
 CLRF BANDERA_SALIDA
 FIN_BANDERA_SALIDA:

GOTO LOOP

CONVERSOR_BCD: // ESTE CONVERSOR DIVIDE EL VALOR DE RESULTADO EN CENTENA, DECENA Y UNIDAD

	CLRF	DECENA // LIMPIARMOS VARIABLE DECENA
	CLRF	CENTENA// LIMPIARMOS VARIABLE CENTENA (NO VA A SER NECESARIA DE IMPRIMIR)
	CLRF	UNIDAD
	MOVF	RESULTADO,W // PASAMOS VALOR QUE QUEREMOS CONVERTIR A W
	MOVWF	UNIDAD // MOVEMOS VALOR A VARIABLE UNIDAD
 
BCD_0:
	MOVLW	0X0A // MOVEMOS VALOR DE 10 A W
	SUBWF	UNIDAD,W // RESTAMOS VALOR 10 A UNIDAD Y LO GUARDAMOS EN W
	BTFSS	STATUS,0//C // VERIFICAMOS CARRY DE STATUS
	GOTO	BCD_Fin // SI EL VALOR FUE 0 SALTA AL FINAL
BCD_1:
	MOVWF	UNIDAD // REGRESAMOS EL VALOR A UNIDAD
	INCF	DECENA,F // INCREMENTAMOS EN 1 EL VALOR DE DECENA
	MOVLW	0X0A //PONEMOS 10 DE NUEVO A W
	SUBWF	DECENA,W // RESTAMOS VALOR
	BTFSS	STATUS,0//C VERIFICAMOS CARRY DE ESTATUS 
	GOTO	BCD_0 // SI CARRY FUE 0, NEGATIVO 
BCD_2:
	CLRF	DECENA // LIMPIARMOS DECENA
	INCF	CENTENA,F // INCREMENTAMOS CENTENA
	GOTO	BCD_0 // VAMOS AL INICIO
BCD_Fin:  

    MOVF UNIDAD,W
    MOVWF UNIDAD_FINAL
    MOVF DECENA,W
    MOVWF DECENA_FINAL
    MOVF CENTENA,W
    MOVWF CENTENA_FINAL
    RETURN
    
TIMER_GUION://2 SEGUNDOS
Delay1:		
	MOVLW	0x0C
	MOVWF	TIMER1
	MOVLW	0x46
	MOVWF	TIMER2
	MOVLW	0x04
	MOVWF	TIMER3
Delay_01:
	DECFSZ	TIMER1, f
	GOTO	$+2
	DECFSZ	TIMER2, f
	GOTO	$+2
	DECFSZ	TIMER3, f
	GOTO	Delay_01
    RETURN
    
TIMER_PUNTO://0.5 SEG
Delay2:
			
	MOVLW	0x03
	MOVWF	TIMER1
	MOVLW	0x18
	MOVWF	TIMER2
	MOVLW	0x02
	MOVWF	TIMER3
Delay_02:
	DECFSZ	TIMER1, f
	GOTO	$+2
	DECFSZ	TIMER2, f
	GOTO	$+2
	DECFSZ	TIMER3, f
	GOTO	Delay_02	
	GOTO	$+1
RETURN
    
	 MINI_TIMER:
 	MOVLW	0x3F
	MOVWF	TIMER1
	MOVLW	0x9D
	MOVWF	TIMER2
Delay_0:
	decfsz	TIMER1, f
	GOTO	$+2
	decfsz	TIMER2, f
	GOTO	Delay_0

			
	GOTO	$+1
 
    RETURN

    END